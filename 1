Архитектура web приложения
1 моналитная архитектура:
сервер, бд, пользовательский интрефейс


2  SOA -service oriented architect
использование отдельных модулей -сервисов

 msi -разновидность SOA
 микросервисная архитектура
 сервисы взаимодействуют с помощью сообщений  по протоколу http

 пагинация - страница вывод 20 новостей, потом еще одна страница


 REST -  Representational State Transfer
 архитектурный стиль, определяет правила взаимодействия
 сервера и клиента в сети http и json

 2 книга с книжной полки страница 50: /book/2/page/50 -URL
 стандарт построения REST - URL

CRUD — концепция программирования, которая описывает четыре базовых действия (create, read, update и delete).
В REST API типы запросов и методы запроса отвечают за такие действия, как post, get, put, delete

установили:
SQLAlchemy-serializer
flask-restful

инициировали систему миграций
1 в консоле: alembic init alembic
2 в папке alembic.ini прописать sqlalchemy.url=sqlite:///db/news.sqlite?check_same_thread=False

3 в env.py добавить
import sys
from data.db_session import SqlAlchemyBase
import data.all_models

вместо target_metadata = None вставить:
sys.path.insert(0, r'C:/Users/Student/PycharmProjects/victoria')
target_metadata = SqlAlchemyBase.metadata
4 консоль
alembic revision --autogenerate -m "is_published added"
применить
alembic upgrade head



